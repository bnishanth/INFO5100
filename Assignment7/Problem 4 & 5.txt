package com.company;

public class Main {

    public static void main(String[] args)
    {
        Main ppt = new Main();
        ppt.printPascalTriangle(6);

        Main fp = new Main();
        int[] arr = {1,5,11,5,22,11,33};
        int len = arr.length;
        boolean result = fp.findPartition(arr);
        if(result == false)
        {
            System.out.println("Can't be divided into two subsets");
        }
        else
        {
            System.out.println("Can be divided into two subsets");
        }
    }

    public void printPascalTriangle(int n)
    {
        int triangle[][] = new int[n][n];
        for(int i =0 ; i<n; i++)
        {
            for(int j = 0; j <= i; j++)
            {
                if (j == 0 || j == i)
                {
                    triangle[i][j] = 1;
                }
                else
                {
                    triangle[i][j] = triangle[i - 1][j - 1] + triangle[i - 1][j];
                }
                System.out.print(triangle[i][j] + " ");
            }
            System.out.println();
        }
    }

    public boolean findPartition (int arr[])
    {
        int sum = 0;
        int len = arr.length;
        for(int i=0; i<arr.length; i++)
        {
            sum = sum + arr[i];
        }

        if(sum % 2 != 0)
        {
            return false;
        }
        else
        {
            return SubsetSum( arr, len, sum/2);
        }
    }

    public boolean SubsetSum(int arr[],int len, int sum)
    {
        if(sum == 0)
        {
            return true;
        }
        if(len == 0 && sum != 0)
        {
            return false;
        }
        {
            if (arr[len - 1] > sum)
            {
                return SubsetSum(arr, len - 1, sum);
            }
            else
            {
                return SubsetSum(arr, len-1, sum ) || SubsetSum(arr, len-1, sum-arr[len-1]);
            }
        }
    }
}
